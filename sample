class cis_rhel7::rule::rule_1_1_14 {

# includes Rules:
# 1.1.14, 1.1.15, 1.1.16
  
  file_line { '(1.1.14) /dev/shm - nodev':
    path  => '/etc/fstab',
    line  => '<volume>  /dev/shm  <fstype> nodev 0 0',
    match => '\*/dev/shm\*nodev',
  }

  file_line { '(1.1.15) /dev/shm - nosuid':
    path  => '/etc/fstab',
    line  => '<volume>  /dev/shm  <fstype> nosuid 0 0',
    match => '\*/dev/shm\*nosuid',
  }
  
  file_line { '(1.1.16) /dev/shm - noexec':
    path  => '/etc/fstab',
    line  => '<volume> /dev/shm <fstype>  noexec 0 0',
    match => '\*/dev/shm\*noexec',
  }



} #EOF
class cis_rhel7::rule::rule_1_1_17 (

  $scripts_dir = $::cis_rhel7::params::scripts_dir

) inherits ::cis_rhel7::params {

#includes Rules:
# 1.1.17 - Set Sticky Bit on All World-Writable Directories (Scored)

file { "${scripts_dir}/cis_sticky_bit.sh":
  ensure => file,
  source => "puppet:///modules/cis_rhel7/cis_sticky_bit.sh",
  mode   => '0755',
  noop   => false,
}

$stickybit = $::cis_world_writable_dirs

if ($stickybit != "") {
    notify { "(1.1.17) sticky bit not set on: ${stickybit}": }
}


} #EOF
class cis_rhel7::rule::rule_1_1_18 {

# includes Rules:
# 1.1.18 - Disable Mounting of cramfs Filesystems (Not Scored)
# 1.1.19 - Disable Mounting of freevxfs Filesystems (Not Scored)
# 1.1.20 - Disable Mounting of jffs2 Filesystems (Not Scored)
# 1.1.21 - Disable Mounting of hfs Filesystems (Not Scored)
# 1.1.22 - Disable Mounting of hfsplus Filesystems (Not Scored)
# 1.1.23 - Disable Mounting of squashfs Filesystems (Not Scored)
# 1.1.24 - Disable Mounting of udf Filesystems (Not Scored)
# 

$file = '/etc/modprobe.d/CIS.conf'

file { '/etc/modprobe.d':
  ensure => directory,
  mode   => '0755',
  owner  => 'root',
  group  => 'root',
}

file { $file :
  ensure => file,
  mode   => '0600',
  owner  => 'root',
  group  => 'root',
}


file_line { "(1.1.18) ${file} - cramfs":
  ensure  => present,
  path    => $file,
  line    => 'install cramfs /bin/true',
}

file_line { "(1.1.19) ${file} - freevxfs":
  ensure  => present,
  path    => $file,
  line    => 'install freevxfs /bin/true',
}

file_line { "(1.1.20) ${file} - jffs2":
  ensure  => present,
  path    => $file,
  line    => 'install jffs2 /bin/true',
}

file_line { "(1.1.21) ${file} - hfs":
  ensure  => present,
  path    => $file,
  line    => 'install hfs /bin/true',
}

file_line { "(1.1.22) ${file} - hfsplus":
  ensure  => present,
  path    => $file,
  line    => 'install hfsplus /bin/true',
}

file_line { "(1.1.23) ${file} - squashfs":
  ensure  => present,
  path    => $file,
  line    => 'install squashfs /bin/true',
}

file_line { "(1.1.24) ${file} - udf":
  ensure  => present,
  path    => $file,
  line    => 'install udf /bin/true',
}



} #EOF
class cis_rhel7::rule::rule_1_1_1 {

# includes Rules:
# 1.1.1 - Create Separate Partition for /tmp (Scored)
# 1.1.2 - Set nodev option for /tmp Partition (Scored)
# 1.1.3 - Set nosuid option for /tmp Partition (Scored)
# 1.1.4 - Set noexec option for /tmp Partition (Scored)

  file { '(1.1.1) "/tmp" properties':
    ensure => 'directory',
    path   => '/tmp',
    mode   => '1777',
    owner  => 'root',
    group  => 'root',
  }

  mount { '(1.1.1 - 1.1.4) /tmp is mounted':
    name    => '/tmp',
    ensure  => 'mounted',
    device  => '/tmp',
    fstype  => 'tmpfs',
    options => 'nodev,nosuid,noexec'
  }
  

} #EOF
class cis_rhel7::rule::rule_1_1_5 {

# includes Rules:
# 1.1.5, 1.1.6

  file_line { '(1.1.5) /var is mounted':
    ensure  => present,
    path    => '/etc/fstab',
    line    => '<volume>  /var  <fstype>  nodev 0 0',
    match   => '\*/var',
  }


  mount { '(1.1.6) /var/tmp is bound to /tmp':
    name    => '/var/tmp',
    ensure  => 'mounted',
    device  => '/tmp',
    fstype  => 'none',
    options => 'bind',
  }

} #EOF
class cis_rhel7::rule::rule_1_1_7 {

# includes Rules:
# 1.1.7, 1.1.8, 1.1.9, 1.1.10
  
  file_line { '(1.1.7) /var/log is separate mount':
    path  => '/etc/fstab',
    line  => '<volume>  /var/log  <fstype> nodev 0 0',
    match => '\*/var/log\*nodev',
  }

  file_line { '(1.1.8) /var/log/audit is separate mount':
    path  => '/etc/fstab',
    line  => '<volume>  /var/log/audit  <fstype> nodev 0 0',
    match => '\*/var/log/audit',
  }
  
  file_line { '(1.1.9 - 1.1.10) /home is separate mount':
    path  => '/etc/fstab',
    line  => '<volume> /home <fstype>  nodev 0 0',
    match => '\*/home\*nodev',
  }


} #EOF
class cis_rhel7::rule::rule_1_2_1 (

  $scripts_dir = $::cis_rhel7::params::scripts_dir

) inherits ::cis_rhel7::params {

#includes Rules:
# 1.2.1 - Configure Connection to the RHN RPM Repositories (Not Scored)



## APPLIES TO REDHAT only

if $::operatingsystem == 'RedHat' 
{  

  file { "${scripts_dir}/cis_redhat_network.sh":
    ensure => file,
    source => "puppet:///modules/cis_rhel7/cis_redhat_network.sh",
    mode   => '0755',
    noop   => false,
  }
  
  $redhat_network = $::cis_redhat_network
  
  if $redhat_network == "not registered with RHN" 
  {
    notify { "(1.2.1) - RedHat Repository is not configured": }
  }
}
else 
{
  notify { "(1.2.1) - This operating system is not RedHat, skipping rule..": }
}



} #EOF
class cis_rhel7::rule::rule_1_2_2 (
  
  $scripts_dir = $::cis_rhel7::params::scripts_dir
  
) inherits ::cis_rhel7::params {

# includes Rules:
# 1.2.2 - Verify Red Hat GPG Key is Installed (Scored)



## APPLIES TO REDHAT only

if $::operatingsystem == 'RedHat' 
{  

  file { "${scripts_dir}/cis_redhat_gpg.sh":
    ensure => file,
    source => "puppet:///modules/cis_rhel7/cis_redhat_gpg.sh",
    mode   => '0755',
    noop   => false,
  }
  
  $gpgkey = $::cis_redhat_gpg
  
  if $gpgkey == "RedHat GPG Key is not installed" 
  {
    notify { "(1.2.2) - RedHat GPG Key is not installed": }
  }
}
else 
{
  notify { "(1.2.2) - This operating system is not RedHat, skipping rule..": }
}



} #EOF
class cis_rhel7::rule::rule_1_2_3 {

# includes Rules:
# 1.2.3 - Verify that gpgcheck is Globally Activated (Scored)

file { '/etc/yum.conf':
  ensure  => file,
  owner   => 'root',
  group   => 'root',
  mode    => '0644',
}

file_line { "(1.2.3) /etc/yum.conf contains gpgcheck=1":
  ensure  => present,
  path    => '/etc/yum.conf',
  line    => 'gpgcheck=1',
}





} #EOF
class cis_rhel7::rule::rule_1_2_4 (
  
  $scripts_dir = $::cis_rhel7::params::scripts_dir
  
) inherits ::cis_rhel7::params {

# includes Rules:
# 1.2.4 - Disable the rhnsd Daemon (Not Scored)

if $::operatingsystem == 'RedHat'
{

  service { "(1.2.4) rhnsd service is disabled":
    name    => "rhnsd",
    ensure  => stopped,
    enable  => false,
  }
}
else
{
    notify { "(1.2.4) - This operating system is not RedHat, skipping rule..": }
}





} #EOF
class cis_rhel7::rule::rule_1_2_5 (
  $scripts_dir = $::cis_rhel7::params::scripts_dir
) inherits ::cis_rhel7::params {

# includes Rules:
# 1.2.5 - Obtain Software Package Updates with yum (Not Scored)

file { "${scripts_dir}/cis_yumupdates.sh":
  ensure  => file,
  source  => "puppet:///modules/cis_rhel7/cis_yumupdates.sh",
  mode    => '0755',
  noop    => false,
}

$updates = $::cis_yum_updates

if $updates == "yum updates are available"
{
  notify { "(1.2.5) - Yum updates are available for this host": }
}




} #EOF
class cis_rhel7::rule::rule_1_2_6 (
  $scripts_dir = $::cis_rhel7::params::scripts_dir
) inherits ::cis_rhel7::params {

# includes Rules:
# 1.2.6 - Verify Package Integrity Using RPM (Not Scored)

file { "${scripts_dir}/cis_pkg_integrity.sh":
  ensure  => file,
  source  => "puppet:///modules/cis_rhel7/cis_pkg_integrity.sh",
  mode    => '0755',
  noop    => false,
}

$pkg = $::cis_pkg_integrity

if $pkg != ""
{
  notify { "(1.2.6) - Installed packages did not pass integrity check": }
}




} #EOF
class cis_rhel7::rule::rule_1_3_1 {
  
# includes Rules:
# 1.3.1 - Install AIDE (Scored)


package { "(1.3.1) - AIDE is installed":
    name    => "aide",
    ensure  => present,
}

exec { "(1.3.1) - Initialize AIDE":
  command => "aide --init -B 'database_out=file:/var/lib/aide/aide.db.gz'",
  creates => "/var/lib/aide/aide.db.gz",
}


} #EOF
class cis_rhel7::rule::rule_1_3_2 {
  
# includes Rules:
# 1.3.2 - Implement Periodic Execution of File Integrity (Scored)


cron { "(1.3.2) - AIDE is scheduled in cron":
    name    => "Run AIDE",
    command => "/usr/sbin/aide --check",
    user    => 'root',
    minute  => 0,
    hour    => 5,
}



} #EOF
class cis_rhel7::rule::rule_1_4_1 {

# includes Rules:
# 1.4.1 - Enable SELinux in /etc/grub.conf (Scored)
# 1.4.2 - Set the SELinux State (Scored)
# 1.4.3 - Set the SELinux Policy (Scored)

file { '/etc/grub.conf' :
  ensure => file,
  mode   => '0600',
  owner  => 'root',
  group  => 'root',
}


file_line { "(1.4.1) /etc/grub.conf - selinux=0":
  ensure  => absent,
  path    => '/etc/grub.conf',
  line    => 'selinux=0',
}

file_line { "(1.4.1) /etc/grub.conf - enforcing=0":
  ensure  => absent,
  path    => '/etc/grub.conf',
  line    => 'enforcing=0',
}


$file = '/etc/selinux/config'

file { $file :
  ensure  => file,
  mode    => '0644',
  owner   => 'root',
  group   => 'root',
}

file_line { "(1.4.2) ${file} - SELINUX=enforcing": 
  ensure  => present,
  path    => $file,
  line    => 'SELINUX=enforcing',
}

file_line { "(1.4.3) ${file} - SELINUXTYPE=targeted":
  ensure  => present,
  path    => $file,
  line    => 'SELINUXTYPE=targeted',
}


} #EOF
class cis_rhel7::rule::rule_1_4_4 {
  
# includes Rules:
# 1.4.4 - Remove SETroubleshoot (Scored)
# 1.4.5 - Remove MCS Translation Service (mcstrans) (Scored)

package { "(1.4.4) - remove SETroubleshoot":
    name    => "setroubleshoot",
    ensure  => absent,
}


package { "(1.4.5) - remove MCS Translation Service":
  name => "mcstrans",
  ensure => absent,
}



} #EOF
class cis_rhel7::rule::rule_1_4_6 (
  $scripts_dir = $::cis_rhel7::params::scripts_dir
) inherits ::cis_rhel7::params {

# includes Rules:
# 1.4.6 - Check for Unconfined Daemons (Scored)

file { "${scripts_dir}/cis_unconfined_daemons.sh":
  ensure  => file,
  source  => "puppet:///modules/cis_rhel7/cis_unconfined_daemons.sh",
  mode    => '0755',
  noop    => false,
}

$ud = $::cis_unconfined_daemons

if $ud != ""
{
  notify { "(1.4.6) - Unconfined daemons present: ${ud}": }
}




} #EOF
class cis_rhel7::rule::rule_1_5_1 {

# includes Rules:
# 1.5.1 - Set User/Group Owner on /boot/grub2/grub.cfg (Scored)
# 1.5.2 - Set Permissions on /etc/grub.conf (Scored)
# 1.5.3 - 1.5.3 Set Boot Loader Password (Scored)

$file = '/boot/grub2/grub.cfg'

file { "(1.5.1 - 1.5.2) - ${file} ownership":
  path    => $file,
  ensure  => file,
  owner   => 'root',
  group   => 'root',
  mode    => '0400',
}



file_line { "(1.5.3) - set superusers in ${file}":
  ensure  => present,
  path    => $file,
  line    => 'set superusers=',
  match   => '^set superusers=',
}

file_line { "(1.5.3) - set password in ${file}":
  ensure  => present,
  path    => $file,
  line    => 'password_pbkdf2',
  match   => '^password_pbkdf2',
}




} #EOF
class cis_rhel7::rule::rule_1_6_1 {

# includes Rules:
# 1.6.1 - Restrict Core Dumps (Scored)
# 1.6.2 - Enable Randomized Virtual Memory Region Placement (Scored)

$file = '/etc/security/limits.conf'

file { "(1.6.1) - ${file} exists":
  path    => $file,
  ensure  => file,
  owner   => 'root',
  group   => 'root',
  mode    => '0644',
}

file_line { "(1.6.1) - ${file}: disable core dumps":
  ensure  => present,
  path    => $file,
  line    => '* hard core 0',
}

$file_sysctl = '/etc/sysctl.conf'

file { "(1.6.1) - ${file_sysctl} exists":
  path  => $file_sysctl,
  ensure  => file,
  owner   => 'root',
  group   => 'root',
  mode    => '0644',
}

file_line { "(1.6.1) - ${file_sysctl}: disable core dumps":
  ensure  => present,
  path    => $file_sysctl,
  line    => 'fs.suid_dumpable = 0',
}

file_line { "(1.6.2) - ${file_sysctl}: enable randomized virtual memory":
  ensure  => present,
  path    => $file_sysctl,
  line    => 'kernel.randomize_va_space = 2',
  match   => '^kernel.randomize_va_space',
}




} #EOF
class cis_rhel7::rule::rule_2_1_1 {

# includes Rules:
# 2.1.1 - Remove telnet-server (Scored)
# 2.1.2 - Remove telnet Clients (Scored)
# 2.1.3 - Remove rsh-server (Scored)
# 2.1.4 - Remove rsh (Scored)
# 2.1.5 - Remove NIS Client (Scored)
# 2.1.6 - Remove NIS Server (Scored)
# 2.1.7 - Remove tftp (Scored)
# 2.1.8 - Remove tftp-server (Scored)
# 2.1.9 - Remove talk (Scored)
# 2.1.10 - Remove talk-server (Scored)
# 2.1.11 - Remove xinetd (Scored)
# 2.1.12 - Disable chargen-dgram (Scored)
# 2.1.13 - Disable chargen-stream (Scored)
# 2.1.14 - Disable daytime-dgram (Scored)
# 2.1.15 - Disable daytime-stream (Scored)
# 2.1.16 - Disable echo-dgram (Scored)
# 2.1.17 - Disable echo-stream (Scored)
# 2.1.18 - Disable tcpmux-server (Scored)


package { "(2.1.1) - Telnet server removed":
  name    => "telnet-server",
  ensure  => absent,
}

package { "(2.1.2) - Telnet client removed":
  name    => "telnet",
  ensure  => absent,
}

package { "(2.1.3) - RSH server removed":
  name    => "rsh-server",
  ensure  => absent,
}

package { "(2.1.4) - RSH client removed":
  name    => "rsh",
  ensure  => absent,
}

package { "(2.1.5) - NIS client removed":
  name    => "ypbind",
  ensure  => absent,
}


package { "(2.1.6) - NIS server removed":
  name    => "ypserv",
  ensure  => absent,
}

package { "(2.1.7) - TFTP client removed":
  name    => "tftp",
  ensure  => absent,
}

package { "(2.1.8) - TFTP server removed":
  name    => "tftp-server",
  ensure  => absent,
}

package { "(2.1.9) - Talk client removed":
  name    => "talk",
  ensure  => absent,
}


package { "(2.1.10) - Talk server removed":
  name    => "talk-server",
  ensure  => absent,
}


package { "(2.1.11) - Xinetd removed":
  name    => "xinetd",
  ensure  => absent,
}

service { "(2.1.12) - Disable chargen-dgram":
  name    => "chargen-dgram",
  ensure  => stopped,
  enable  => false,
}

service { "(2.1.13) - Disable chargen-stream":
  name    => "chargen-stream",
  ensure  => stopped,
  enable  => false,
}

service { "(2.1.14) - Disable daytime-dgram":
  name    => "daytime-dgram",
  ensure  => stopped,
  enable  => false,
}

service { "(2.1.15) - Disable daytime-stream":
  name    => "daytime-stream",
  ensure  => stopped,
  enable  => false,
}

service { "(2.1.16) - Disable echo-dgram":
  name    => "echo-dgram",
  ensure  => stopped,
  enable  => false,
}

service { "(2.1.17) - Disable echo-stream":
  name    => "echo-stream",
  ensure  => stopped,
  enable  => false,
}

service { "(2.1.18) - Disable tcpmux-server":
  name    => "tcpmux-server",
  ensure  => stopped,
  enable  => false,
}



} #EOF
class cis_rhel7::rule::rule_3_16 {

# includes Rules:
# 3.16 - Configure Mail Transfer Agent for Local-Only Mode (Scored)


package { "(3.16) - Postfix installed":
  name    => 'postfix',
  ensure  => installed,
}

file { "(3.16) - /etc/postfix/main.cf exists":
  name    => '/etc/postfix/main.cf',
  ensure  => file,
  mode    => '0644',
  owner   => 'root',
  group   => 'root',
  require => Package['(3.16) - Postfix installed'],
}

service { "(3.16) - Postfix service running":
  name      => 'postfix',
  ensure    => running,
  subscribe => File["(3.16) - /etc/postfix/main.cf exists"],
}

file_line { "(3.16) - inet_interfaces = localhost":
  ensure  => present,
  path  => '/etc/postfix/main.cf',
  line  => 'inet_interfaces = localhost',
  match => '^inet_interfaces',
}


} #EOF
class cis_rhel7::rule::rule_3_1 {

# includes Rules:
# 3.1 - Set Daemon umask (Scored)

$file = '/etc/sysconfig/init'

if $::operatingsystem == 'RedHat'
{

  file { "(3.1) - ${file} exists":
    path    => $file,
    ensure  => file,
    owner   => 'root',
    group   => 'root',
    mode    => '0644',
  }

  file_line { "(3.1) - ${file} umask 027":
    ensure  => present,
    path    => $file,
    line    => 'umask 027',
    match   => '^umask 027',
  }

} 
else 
{
  notify { "(3.1) - This operating system is not RedHat, skipping..": }
}


} #EOF
class cis_rhel7::rule::rule_3_2 {

# includes Rules:
# 3.2 - Remove the X Window System (Scored)


package { "(3.2) - remove X Window system":
  name    => "xorg-x11-server-common",
  ensure  => absent,
}

file { "(3.2) - default.target":
  name    => '/usr/lib/systemd/system/default.target',
  ensure  => link,
  target  => 'multi-user.target',
}


} #EOF
class cis_rhel7::rule::rule_3_3 {

# includes Rules:
# 3.3 - Disable Avahi Server (Scored)
# 3.4 - Disable Print Server - CUPS (Not Scored)
# 3.5 - Remove DHCP Server (Scored)

service { "(3.3) - disable Avahi server":
  name    => "avahi-daemon",
  ensure  => stopped,
  enable  => false,
}

service { "(3.4) - disable Print server CUPS":
  name    => "cups",
  ensure  => stopped,
  enable  => false,
}

package { "(3.5) - remove DHCP server":
  name    => "dhcp",
  ensure  => absent,
}



} #EOF
class cis_rhel7::rule::rule_3_6 {

# includes Rules:
# 3.6 - Configure Network Time Protocol (NTP) (Scored)

package { "(3.6) - NTP installed":
  name    => "ntp",
  ensure  => present,
}

$file = '/etc/ntp.conf'

file { "(3.6) - NTP conf file exists":
  path    => $file,
  ensure  => file,
  owner   => 'root',
  group   => 'root',
  mode    => '0644',
  require => Package['(3.6) - NTP installed'],
}

service { "(3.6) - NTP service running":
  name      => "ntpd",
  ensure    => running,
  subscribe => File["${file}"],
}
 
file_line { "(3.6) - restrict default in ${file}":
  ensure  => present,
  path    => $file,
  line    => 'restrict default kod nomodify notrap nopeer noquery'
}

file_line { "(3.6) - restrict -6 default in ${file}":
  ensure  => present,
  path    => $file,
  line    => 'restrict -6 default kod nomodify notrap nopeer noquery'
}

file_line { "(3.6) - ${file} contains NTP servers":
  ensure    => present,
  path      => $file,
  line      => 'server',
  match     => '^server.*$',
  multiple  => true,
  replace   => false,
} 

file_line { "(3.6) - /etc/sysconfig/ntpd OPTIONS":
  ensure  => present,
  path    => '/etc/sysconfig/ntpd',
  line    => 'OPTIONS="-u ntp:ntp -p /var/run/ntpd.pid"',
  match   => '^OPTIONS.*$',
}


} #EOF
class cis_rhel7::rule::rule_3_7 {

# includes Rules:
# 3.7 - Remove LDAP (Not Scored)

package { "(3.7) - remove LDAP server":
  name    => "openldap-servers",
  ensure  => absent,
}

package { "(3.7) - remove LDAP clients":
  name  => "openldap-clients",
  ensure  => absent,
}



} #EOF
class cis_rhel7::rule::rule_3_8 {

# includes Rules:
# 3.8 - Disable NFS and RPC (Not Scored)

$services = ['nfslock','rpcgssd','rpcbind','rpcidmapd','rpcsvcgssd']

each($services) |$serv| {
  service { "(3.8) - ${serv} disabled":
    name    => $serv,
    ensure  => stopped,
    enable  => false,
  }
}

} #EOF
class cis_rhel7::rule::rule_3_9 {

# includes Rules:
# 3.9 - Remove DNS Server (Not Scored)
# 3.10 - 3.10 Remove FTP Server (Not Scored)
# 3.11 - 3.11 Remove HTTP Server (Not Scored)
# 3.12 - 3.12 Remove Dovecot (IMAP and POP3 services) (Not Scored)
# 3.13 - 3.13 Remove Samba (Not Scored)
# 3.14 - 3.14 Remove HTTP Proxy Server (Not Scored)
# 3.15 - 3.15 Remove SNMP Server (Not Scored)

$packages = ['3.9,bind','3.10,vsftpd','3.11,httpd','3.12,dovecot','3.13,samba','3.14,squid','3.15,net-snmp']

each($packages) |$package| {

  $pkg = split($package,',')
  package { "(${pkg[0]}) - Remove ${pkg[1]}":
    name    => $pkg[1],
    ensure  => absent,
  }
}



} #EOF
class cis_rhel7::rule::rule_4_1_1 {

# includes Rules:
# 4.1.1 - Disable IP Forwarding (Scored)
# 4.1.2 - Disable Send Packet Redirects (Scored)


$file = '/etc/sysctl.conf'



file_line { "(4.1.1) - ${file}: ip_forward=0":
  ensure  => present,
  path  => $file,
  line  => 'net.ipv4.ip_forward=0',
  match => '^net.ipv4.ip_forward',
}


file_line { "(4.1.2) - ${file}: all.send_redirects=0":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.conf.all.send_redirects=0',
  match   => '^net.ipv4.conf.all.send_redirects',
}

file_line { "(4.1.2) - ${file}: default.send_redirects=0":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.conf.default.send_redirects=0',
  match   => '^net.ipv4.conf.default.send_redirects',
}




} #EOF
class cis_rhel7::rule::rule_4_2_1 {

# includes Rules:
# 4.2.1 - Disable Source Routed Packet Acceptance (Scored)
# 4.2.2 - Disable ICMP Redirect Acceptance (Scored)
# 4.2.3 - Disable Secure ICMP Redirect Acceptance (Scored)
# 4.2.4 - Log Suspicious Packets (Scored)
# 4.2.5 - Enable Ignore Broadcast Requests (Scored)
# 4.2.6 - Enable Bad Error Message Protection (Scored)
# 4.2.7 - Enable RFC-recommended Source Route Validation (Scored)
# 4.2.8 - Enable TCP SYN Cookies (Scored)

$file = '/etc/sysctl.conf'

file_line { "(4.2.1) - ${file}: all.accept_source_route=0":
  ensure  => present,
  path  => $file,
  line  => 'net.ipv4.conf.all.accept_source_route=0',
  match => '^net.ipv4.conf.all.accept_source_route',
}


file_line { "(4.2.1) - ${file}: default.accept_source_route=0":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.conf.default.accept_source_route=0',
  match   => '^net.ipv4.conf.default.accept_source_route',
}

file_line { "(4.2.2) - ${file}: all.accept_redirects=0":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.conf.all.accept_redirects=0',
  match   => '^net.ipv4.conf.all.accept_redirects=0',
}


file_line { "(4.2.2) - ${file}: default.accept_redirects=0":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.conf.default.accept_redirects=0',
  match   => '^net.ipv4.conf.default.accept_redirects=0',
}

file_line { "(4.2.3) - ${file}: all.secure_redirects=0":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.conf.all.secure_redirects=0',
  match   => '^net.ipv4.conf.all.secure_redirects=0',
} 

file_line { "(4.2.3) - ${file}: default.secure_redirects=0":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.conf.default.secure_redirects=0',
  match   => '^net.ipv4.conf.default.secure_redirects=0',
} 

file_line { "(4.2.4) - ${file}: all.log_martians=1":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.conf.all.log_martians=1',
  match   => '^net.ipv4.conf.all.log_martians=1',
} 

file_line { "(4.2.4) - ${file}: default.log_martians=1":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.conf.default.log_martians=1',
  match   => '^net.ipv4.conf.default.log_martians=1',
} 

file_line { "(4.2.5) - ${file}: icmp_echo_ignore_broadcasts=1":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.icmp_echo_ignore_broadcasts=1',
  match   => '^net.ipv4.icmp_echo_ignore_broadcasts',
} 

file_line { "(4.2.6) - ${file}: icmp_ignore_bogus_error_responses=1":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.icmp_ignore_bogus_error_responses=1',
  match   => '^net.ipv4.icmp_ignore_bogus_error_responses',
}

file_line { "(4.2.7) - ${file}: all.rp_filter=1":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.conf.all.rp_filter=1',
  match   => '^net.ipv4.conf.all.rp_filter',
} 

file_line { "(4.2.7) - ${file}: default.rp_filter=1":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.conf.default.rp_filter=1',
  match   => '^net.ipv4.conf.default.rp_filter',
}

file_line { "(4.2.8) - ${file}: net.ipv4.tcp_syncookies=1":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.tcp_syncookies=1',
  match   => '^net.ipv4.tcp_syncookies',
}



} #EOF
class cis_rhel7::rule::rule_4_4_1 {

# includes Rules:
# 4.4.1.1 - Disable IP Forwarding (Scored)
# 4.4.1.2 - Disable Send Packet Redirects (Scored)
# 4.4.2 - Disable IPv6 (Not Scored)

$file = '/etc/sysctl.conf'


file_line { "(4.4.1.1) - ${file}: all.accept_ra=0":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.conf.all.accept_redirects=0',
  match   => '^net.ipv4.conf.all.accept_redirects',
}
        
file_line { "(4.4.1.1) - ${file}: default.accept_ra=0":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.conf.default.accept_ra=0',
  match   => '^net.ipv4.conf.default.accept_ra=0',
}

file_line { "(4.4.1.2) - ${file}: all.accept_redirects=0":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.conf.all.accept_redirects=0',
  match   => '^net.ipv4.conf.all.accept_redirects',
}

file_line { "(4.4.1.2) - ${file}: default.accept_redirects=0":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv4.conf.default.accept_redirects=0',
  match   => '^net.ipv4.conf.default.accept_redirects',
}

file_line { "(4.4.2) - ${file}: all.disable_ipv6=1":
  ensure  => present,
  path    => $file,
  line    => 'net.ipv6.conf.all.disable_ipv6=1',
  match   => '^net.ipv6.conf.all.disable_ipv6',
}

file_line { "(4.4.2) - disable IPv6 in /etc/sysconfig/network":
  ensure  => present,
  path    => '/etc/sysconfig/network',
  line    => 'IPV6INIT=no',
  match   => '^IPV6INIT',
}

file_line { "(4.4.2) - disable IPv6 Networking":
  ensure  => present,
  path    => '/etc/sysconfig/network',
  line    => 'NETWORKING_IPV6=no',
  match   => '^NETWORKING_IPV6',
}



} #EOF
class cis_rhel7::rule::rule_4_5_1 {

# includes Rules:
# 4.5.1 - Install TCP Wrappers (Not Scored)


package { "(4.5.1) - Install TCP Wrappers":
  name    => "tcp_wrappers",
  ensure  => present,
}



} #EOF
class cis_rhel7::rule::rule_4_5_2 {

# includes Rules:
# 4.5.2 - Create /etc/hosts.allow (Not Scored)
# 4.5.3 - Verify Permissions on /etc/hosts.allow (Scored)

$file = '/etc/hosts.allow'

file_line { "(4.5.2) - ${file}: ADD: net/mask":
  ensure    => present,
  path      => $file,
  line      => 'ALL: <net>/<mask',
  match     => '^ALL.?:.?\d{2,}.\d{2,}.\d{1,}.\d{1,}\/\d{2,}.\d{2,}.\d{1,}.\d{1,}',
  multiple  => true,
  replace   => false,
} 

file { "(4.5.3) - ${file} has 644 permissions":
  ensure  => file,
  path    => $file,
  owner   => 'root',
  group   => 'root',
  mode    => '0644',
}


} #EOF
class cis_rhel7::rule::rule_4_5_4 {

# includes Rules:
# 4.5.4 - Create /etc/hosts.deny (Not Scored)
# 4.5.5 - Verify Permissions on /etc/hosts.deny (Scored)


$file = '/etc/hosts.deny'

file_line { "(4.5.4) - ${file}: ALL:ALL":
  ensure    => present,
  path      => $file,
  line      => 'ALL:ALL',
  match     => '^ALL.?:.?ALL',
  multiple  => false,
  replace   => false,
} 

file { "(4.5.5) - ${file} has 644 permissions":
  ensure  => file,
  path    => $file,
  owner   => 'root',
  group   => 'root',
  mode    => '0644',
}


} #EOF
class cis_rhel7::rule::rule_4_6_1 {

# includes Rules:
# 4.6.1 - Disable DCCP (Not Scored)


$file = '/etc/modprobe.d/CIS.conf'


file_line { "(4.6.1) - ${file}: disable DCCP ":
  ensure    => present,
  path      => $file,
  line      => 'install dccp /bin/true',
} 

file_line { "(4.6.2) - ${file}: disable SCTP ":
  ensure    => present,
  path      => $file,
  line      => 'install sctp /bin/true',
}


file_line { "(4.6.3) - ${file}: disable RDS ":
  ensure    => present,
  path      => $file,
  line      => 'install rds /bin/true',
}

file_line { "(4.6.4) - ${file}: disable TIPC ":
  ensure    => present,
  path      => $file,
  line      => 'install tipc /bin/true',
}



} #EOF
class cis_rhel7::rule::rule_4_7 {

# includes Rules:
# 4.7 - Enable firewalld (Scored)

service { "(4.7) - firewalld enabled":
  name      => 'firewalld',
  ensure    => running,
}


} #EOF
class cis_rhel7::rule::rule_5_1_1 {

# includes Rules:
# 5.1.1 - Install the rsyslog package (Scored)
# 5.1.2 - Activate the rsyslog Service (Scored)
# 5.1.3 - Configure /etc/rsyslog.conf (Not Scored)
# 5.1.4 - Create and Set Permissions on rsyslog Log Files (Scored)
# 5.1.5 - Configure rsyslog to Send Logs to a Remote Log Host (Scored)
# 5.1.6 - Accept Remote rsyslog Messages Only on Designated Log Hosts (Not Scored)

package { "(5.1.1) - Rsyslog installed":
  name    => 'rsyslog',
  ensure  => installed,
}

service { "(5.1.2) - Rsyslog service running":
  name      => 'rsyslog',
  ensure    => running,
  subscribe => File["(5.1.3) - /etc/rsyslog.conf exists"],
}

$file = '/etc/rsyslog.conf'

file { "(5.1.3) - ${file} exists":
  name    => $file,
  ensure  => file,
  mode    => '0644',
  owner   => 'root',
  group   => 'root',
  require => Package['(5.1.1) - Rsyslog installed'],
}


$contents = [ 'auth,user.* /var/log/messages',
              'kern.* /var/log/kern.log',
              'daemon.* /var/log/daemon.log',
              'syslog.* /var/log/syslog',
              'lpr,news,uucp,local0,local1,local2,local3,local4,local5,local6.* /var/log/unused.log'
            ]

each($contents) |$item| {
  
  file_line { "(5.1.3) - ${file}: contains  ${item}":
  ensure  => present,
  path    => $file,
  line    => "${item}",
  }
  
  $logfile = split($item, '[\s]')

  file { "(5.1.4) - ${logfile[1]} permissions: 0640":
    name    => $logfile[1],
    ensure  => file,
    mode    => '0640',
    owner   => 'root',
    group   => 'root',
  }

}


file_line { "(5.1.5) - ${file}: Remote host configured":
  ensure    => present,
  path      => $file,
  line      => '*.* @@loghost.company.com',
  match     => '^*.*.@@.*$',
  # multiple  => true,
  #replace   => false,
} 

file_line { "(5.1.6) - ${file}: \$ModLoad imtcp.so":
  ensure  => present,
  path    => $file,
  line    => '$ModLoad imtcp.so',
}

file_line { "(5.1.6) - ${file}: \$InputTCPServerRun 514":
  ensure  => present,
  path    => $file,
  line    => '$InputTCPServerRun 514',
}

} #EOF
class cis_rhel7::rule::rule_5_2_1_1 {

# includes Rules:
# 5.2.1.1 - Configure Audit Log Storage Size (Not Scored)
# 5.2.1.2 - Disable System on Audit Log Full (Not Scored)
# 5.2.1.3 - Keep All Auditing Information (Scored)
# 5.2.2 - Enable auditd Service (Scored)

$file = '/etc/audit/auditd.conf'

file_line { "(5.2.1.1) - ${file}: max_log_file":
  ensure    => present,
  path      => $file,
  line      => 'max_log_file = <MB>',
  match     => '^max_log_file.?=.?\d{1,}',
  multiple  => false,
  replace   => false,
} 

file_line { "(5.2.1.2) - ${file}: space_left_action":
  ensure    => present,
  path      => $file,
  line      => 'space_left_action = email',
  match     => '^space_left_action.?=.?email',
  multiple  => false,
  replace   => false,
}

file_line { "(5.2.1.2) - ${file}: action_mail_acct":
  ensure    => present,
  path      => $file,
  line      => 'action_mail_acct = root',
  match     => '^action_mail_acct.?=.?root',
  multiple  => false,
  replace   => false,
}

file_line { "(5.2.1.2) - ${file}: admin_space_left_action":
  ensure    => present,
  path      => $file,
  line      => 'admin_space_left_action = halt',
  match     => '^admin_space_left_action.?=.?halt',
  multiple  => false,
  replace   => false,
}  

file_line { "(5.2.1.3) - ${file}: max_log_file_action":
  ensure    => present,
  path      => $file,
  line      => 'max_log_file_action = keep_logs',
  match     => '^max_log_file_action.?=.?keep_logs',
  multiple  => false,
  replace   => false,
}  

service { "(5.2.2) - auditd service enabled":
  name    => "auditd",
  ensure  => running,
  enable  => true,
}



} #EOF
class cis_rhel7::rule::rule_5_2_3 {

# includes Rules:
# 5.2.3 - Enable Auditing for Processes That Start Prior to auditd (Scored)


$file = '/etc/default/grub'

file { "(5.2.3) - ${file} exists":
  name    => $file,
  ensure  => file,
  mode    => '0644',
  owner   => 'root',
  group   => 'root',
}


file_line { "(5.2.3) - ${file}: audit=1":
  ensure    => present,
  path      => $file,
  line      => 'audit=1',
  match     => '^GRUB_CMDLINE_LINUX=".*audit=1.*$',

} 


} #EOF
class cis_rhel7::rule::rule_5_2_4 (

  $rules = $::cis_rhel7::params::audit_rules

) inherits cis_rhel7::params {

# includes Rules:
# 5.2.4 - Record Events That Modify Date and Time Information (Scored)
# 5.2.5 - Record Events That Modify User/Group Information (Scored)
# 5.2.6 - Record Events That Modify the System's Network Environment (Scored)
# 5.2.7 - Record Events That Modify the System's Mandatory Access Controls (Scored)
# 5.2.8 - Collect Login and Logout Events (Scored)
# 5.2.9 - Collect Session Initiation Information (Scored)
# 5.2.10 - Collect Discretionary Access Control Permission Modification Events (Scored)
# 5.2.11 - Collect Unsuccessful Unauthorized Access Attempts to Files (Scored)
# 5.2.13 - Collect Successful File System Mounts (Scored)
# 5.2.14 - Collect File Deletion Events by User (Scored)
# 5.2.15 - Collect Changes to System Administration Scope (sudoers) (Scored)
# 5.2.16 - Collect System Administrator Actions (sudolog) (Scored)
# 5.2.17 - Collect Kernel Module Loading and Unloading (Scored)
# 5.2.18 - Make the Audit Configuration Immutable (Scored)

$file = '/etc/audit/audit.rules'

each ($rules) |$rule_item| {
  
  $rule = split($rule_item, '%')

  file_line { "(${rule[1]}) - ${file}: ${rule[0]}":
    ensure    => present,
    path      => $file,
    line      => $rule[0],
    multiple  => false,
  }
}

} #EOF
class cis_rhel7::rule::rule_5_3 {

# includes Rules:
# 5.3 - Configure logrotate (Not Scored)


$file = '/etc/logrotate.d/syslog'

file { "(5.3) - ${file} exists":
  name    => $file,
  ensure  => file,
  mode    => '0644',
  owner   => 'root',
  group   => 'root',
}

$logs = [ '/var/log/messages','/var/log/secure','/var/log/maillog','/var/log/spooler','/var/log/boot.log','/var/log/cron' ]

each ($logs) |$log| {
 
  file_line { "(5.3) - ${file}: ${log}":
    ensure    => present,
    path      => $file,
    line      => $log,
    match	  => "^${rule}",
    multiple  => false,
  }
}


} #EOF
class cis_rhel7::rule::rule_6_1_1 {

# includes Rules:
# 6.1.1 - Enable anacron Daemon (Scored)
# 6.1.2 - Enable crond Daemon (Scored)
# 6.1.3 - Set User/Group Owner and Permission on /etc/anacrontab (Scored)
# 6.1.4 - Set User/Group Owner and Permission on /etc/crontab (Scored)
# 6.1.5 - Set User/Group Owner and Permission on /etc/cron.hourly (Scored)
# 6.1.6 - Set User/Group Owner and Permission on /etc/cron.daily (Scored)
# 6.1.7 - Set User/Group Owner and Permission on /etc/cron.weekly (Scored)
# 6.1.8 - Set User/Group Owner and Permission on /etc/cron.monthly (Scored)
# 6.1.9 - Set User/Group Owner and Permission on /etc/cron.d (Scored)
# 6.1.10 - Restrict at Daemon (Scored)
# 6.1.11 - Restrict at/cron to Authorized Users (Scored)

package { "(6.1.1) - Anacron installed":
    name    => "cronie-anacron",
    ensure  => present,
}

service { "(6.1.2) - crond service is enabled":
	name    => "crond",
    ensure  => running,
    enable  => true,
  }


$files = [ '/etc/anacrontab,6.1.3',
		   '/etc/crontab,6.1.4',
		   '/etc/cron.hourly,6.1.5',
		   '/etc/cron.daily,6.1.6',
		   '/etc/cron.weekly,6.1.7',
		   '/etc/cron.monthly,6.1.8',
		   '/etc/at.allow,6.1.10',
		   '/etc/cron.allow,6.1.11'
		 ]


each($files) |$file_item| {

	$file = split($file_item,',')

	file { "(${file[1]}) - ${file[0]} permissions":
		ensure	=> file,
		path   	=>  $file[0],
    	mode   	=> '0600',
    	owner  	=> 'root',
    	group  	=> 'root',
	}
}


file { "(6.1.9) - /etc/cron.d permissions":
	ensure	=> directory,
	path   => '/etc/cron.d',
    mode   => '0700',
    owner  => 'root',
    group  => 'root',
}


} #EOF
class cis_rhel7::rule::rule_6_2_1 (

	$settings = $::cis_rhel7::params::sshd_settings

) inherits cis_rhel7::params {

# includes Rules:
# 6.2.1 - Set SSH Protocol to 2 (Scored)
# 6.2.2 - Set LogLevel to INFO (Scored)
# 6.2.3 - Set Permissions on /etc/ssh/sshd_config (Scored)
# 6.2.4 - Disable SSH X11 Forwarding (Scored)
# 6.2.5 - Set SSH MaxAuthTries to 4 or Less (Scored)
# 6.2.6 - Set SSH IgnoreRhosts to Yes (Scored)
# 6.2.7 - Set SSH HostbasedAuthentication to No (Scored)
# 6.2.8 - Disable SSH Root Login (Scored)
# 6.2.9 - Set SSH PermitEmptyPasswords to No (Scored)
# 6.2.10 - Do Not Allow Users to Set Environment Options (Scored)
# 6.2.11 - Use Only Approved Cipher in Counter Mode (Scored)
# 6.2.12 - Set Idle Timeout Interval for User Login (Scored)
# 6.2.13 - Limit Access via SSH (Scored)
# 6.2.14 - Set SSH Banner (Scored)

$file = '/etc/ssh/sshd_config'

each ($settings) |$item| {

  $setting = split($item,'%')
 
  file_line { "(${setting[1]}) - ${file}: ${setting[0]}":
    ensure    => present,
    path      => $file,
    line      => $setting[0],
  }
}

file { "(6.2.3) - ${file} permissions":
  name    => $file,
  ensure  => file,
  mode    => '0600',
  owner   => 'root',
  group   => 'root',
}

file_line { "(6.2.13) - ${file}: AllowUsers":
  ensure  	=> present,
  path    	=> $file,
  line 		=> 'AllowUsers <user>',
  match 	=> '^AllowUsers.?$',
  multiple  => false,
  replace   => true,
}

file_line { "(6.2.14) - ${file}: Banner":
  ensure  	=> present,
  path    	=> $file,
  line 		=> 'Banner /etc/issue.net',
  match 	=> '^Banner./etc/issue.?$',
  multiple  => false,
  replace   => true,
}

} #EOF
